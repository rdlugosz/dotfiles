syntax enable
set t_Co=256
set background=dark
"colorscheme wombat

"http://astonj.com/tech/vim-for-ruby-rails-and-a-sexy-theme/
" the silent bit will quietly ignore errors if this scheme isn't found
"silent! color codeschool
silent! color vividchalk

set guifont=Source\ Code\ Pro:h15
"let g:NERDTreeWinPos = "right"
set guioptions-=T " Removes top toolbar
set guioptions-=r " Removes right hand scroll bar
set go-=L " Removes left hand scroll bar

" http://stackoverflow.com/questions/4633564/vim-mac-vs-linux-m-problem
set fileformats=unix,mac,dos

set history=10000

"https://gist.github.com/3012145
"set rnu
"au BufEnter * :set rnu
"au BufLeave * :set nu
"au WinEnter * :set rnu
"au WinLeave * :set nu
"au InsertEnter * :set nu
"au InsertLeave * :set rnu
"au FocusLost * :set nu
"au FocusGained * :set rnu

" let us see cmds as they are typed, esp leader
set showcmd

" show $ marker at the boundry of cw
set cpoptions+=$

" allow cursor to venture where no chars actually exist
"set virtualedit=all

" allow modified buffers to be hidden
set hidden

" show line of autocomplete options
set wildmenu

" MacVim and oh-my-zsh do not seem to get along very well...
set shell=bash

" load the less syntax file
au BufRead,BufNewFile *.less set ft=less

" treat all numbers as decimal, even those with leading zeros
" that would otherwise be treated as octal...
set nrformats=

" Insert the Ruby hashrocket with <c-l>
imap <c-l> <space>=><space>

" delete trailing whitespace with F5
" http://vim.wikia.com/wiki/Remove_unwanted_spaces
nnoremap <silent> <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

" Automatically call Tabularize when building a cucumber table with |
" (vertical bars)
" see: https://gist.github.com/287147

inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a

function! s:align()
  let p = '^\s*|\s.*\s|\s*$'
  if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
    Tabularize/|/l1
    normal! 0
    call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction

" Use Marked.app to preview Markdown files...
" http://stackoverflow.com/questions/9212340/is-there-a-vim-plugin-for-preview-markdown-file
function! s:setupMarkup()
  nnoremap <leader>p :silent !open -a Marked.app '%:p'<cr>
endfunction

au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} call s:setupMarkup()
