syntax enable
set t_Co=256
set background=dark
colorscheme solarized

"let g:NERDTreeWinPos = "right"

" http://stackoverflow.com/questions/4633564/vim-mac-vs-linux-m-problem
set fileformats=unix,mac,dos

set history=10000

" let us see cmds as they are typed, esp leader
set showcmd

" show $ marker at the boundry of cw
set cpoptions+=$

" change the cursor shape depending on mode
" see: http://vim.wikia.com/wiki/Change_cursor_shape_in_different_modes
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

" allow modified buffers to be hidden
set hidden

" show line of autocomplete options
set wildmenu
set wildignore+=*/tmp/*

" MacVim and oh-my-zsh do not seem to get along very well...
set shell=bash

" treat all numbers as decimal, even those with leading zeros
" that would otherwise be treated as octal...
set nrformats=

" Insert the Ruby hashrocket with <c-l>
imap <c-l> <space>=><space>

" delete trailing whitespace with F5
" http://vim.wikia.com/wiki/Remove_unwanted_spaces
nnoremap <silent> <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

" Automatically call Tabularize when building a cucumber table with |
" (vertical bars)
" see: https://gist.github.com/287147
inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a

function! s:align()
  let p = '^\s*|\s.*\s|\s*$'
  if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
    Tabularize/|/l1
    normal! 0
    call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction

" Use Marked.app to preview Markdown files...
" http://stackoverflow.com/questions/9212340/is-there-a-vim-plugin-for-preview-markdown-file
function! s:setupMarkup()
  nnoremap <leader>p :silent !open -a Marked.app '%:p'<cr>
endfunction

au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} call s:setupMarkup()
